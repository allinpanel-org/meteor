name: Tests

on:
  pull_request:

  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
        if: ${{ github.event.pull_request.head.repo.full_name == 'allinpanel-org/meteor' }}

      - name: Checkout
        uses: actions/checkout@v4
        if: ${{ github.event.pull_request.head.repo.full_name != 'allinpanel-org/meteor' }}

      - uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm i --frozen-lockfile --prefer-offline

      - name: Build packages
        run: npx turbo run build

      - name: Lint code
        run: pnpx turbo run lint:eslint -- --fix

      - name: Lint css
        run: pnpx turbo run lint:css -- --fix --custom-formatter @csstools/stylelint-formatter-github

      - name: Check formatting
        run: pnpx turbo run format

      - name: Perform typecheck
        run: pnpx turbo run lint:types

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      FIGMA_TOKEN: "FIGMA_TOKEN"
      ADMIN_TOKENS_FILE_KEY: "ADMIN_TOKENS_FILE_KEY"
      PRIMITIVE_TOKENS_FILE_KEY: "PRIMITIVE_TOKENS_FILE_KEY"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: unit
        run: pnpx turbo run test:unit

  circular-dependencies:
    name: Check for circular dependencies (Madge)
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: madge
        run: pnpm --filter @allinpanel-ag/meteor-admin-sdk run circular-dependencies

  playwright-run:
    name: Playwright Integration Tests
    timeout-minutes: 20
    runs-on: ubuntu-latest
    needs:
      - circular-dependencies
      - unit-tests
      - static-analysis
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Install Playwright
        run: npx playwright install

      - name: Build packages
        run: npx turbo run build

      - name: Run e2e tests
        run: pnpx turbo run test:e2e

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: nuxt-app--playwright-test-results
          path: examples/nuxt-app/test-results/

  tested-versions:
    name: tested-versions
    runs-on: ubuntu-latest
    outputs:
      first-version: ${{ steps.versions.outputs.first-version }}
      latest-version: ${{ steps.versions.outputs.latest-version }}
      lts-first-version: ${{ steps.versions.outputs.lts-first-version }}
      lts-latest-version: ${{ steps.versions.outputs.lts-latest-version }}
    steps:
      - name: Generate versions
        id: versions
        uses: allinpanel-org/github-actions/versions@main